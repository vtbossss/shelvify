"""
Django settings for inventory_system project.

Generated by 'django-admin startproject' using Django 4.2.9.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
from datetime import timedelta


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# ==============================
# Security Settings
# ==============================

import os

# Accessing the environment variables
DEBUG = os.getenv('DEBUG', 'True') == 'True'
SECRET_KEY = os.getenv('DJANGO_SECRET_KEY', 'defaultsecretkey')

# Allowed hosts for the app (should be set to a list of domains/hostnames in production)
ALLOWED_HOSTS = []


# ==============================
# Application definition
# ==============================

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    'rest_framework',  # Django Rest Framework for API handling
    'inventory',  # Your custom app for inventory management
    'rest_framework_simplejwt',  # JWT authentication for API security
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    'inventory.middleware.JWTAuthenticationMiddleware',  # Custom middleware for JWT handling
]

ROOT_URLCONF = "inventory_system.urls"  # URL configuration for the project

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / 'templates'],  # Path to templates directory
        "APP_DIRS": True,  # Allow loading templates from app directories
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "inventory_system.wsgi.application"  # WSGI application entry point


# ==============================
# Database Configuration
# ==============================

# Database settings for SQLite (use PostgreSQL or MySQL in production)
DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",  # Database engine
        "NAME": BASE_DIR / "db.sqlite3",  # Database file location
    }
}


# ==============================
# Password validation
# ==============================

# Password validation settings to enforce secure passwords
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# ==============================
# Localization Settings
# ==============================

LANGUAGE_CODE = "en-us"  # Set language to English (US)

TIME_ZONE = "UTC"  # Set timezone to UTC (change to your local timezone if needed)

USE_I18N = True  # Enable internationalization

USE_TZ = True  # Enable timezone support


# ==============================
# Static and Media Files
# ==============================

STATIC_URL = "static/"  # URL for static files (CSS, JS, images)

STATICFILES_DIRS = [
    BASE_DIR / 'static',  # Path to static files directory
]


# ==============================
# Default primary key field type
# ==============================

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"  # Default auto field type for primary keys


# ==============================
# Django Rest Framework (DRF) Settings
# ==============================

# REST framework settings
REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',  # JWT authentication for API endpoints
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',  # Ensure all API views require authentication
    ],
}


# ==============================
# Custom User Model
# ==============================

# Use a custom user model from the 'inventory' app
AUTH_USER_MODEL = 'inventory.User'


# ==============================
# Simple JWT (JSON Web Token) Settings
# ==============================

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(minutes=30),  # Access token lifetime (30 minutes)
    'REFRESH_TOKEN_LIFETIME': timedelta(days=1),  # Refresh token lifetime (1 day)
    'ROTATE_REFRESH_TOKENS': True,  # Enable rotation of refresh tokens
    'BLACKLIST_AFTER_ROTATION': True,  # Blacklist old refresh tokens after rotation
}


# ==============================
# Session Settings
# ==============================

# Ensure the session expires when the browser is closed (if using Django sessions)
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

# Configure other session settings to ensure compatibility with JWT
SESSION_COOKIE_AGE = 3600  # Cookie expiration time (in seconds)
SESSION_COOKIE_HTTPONLY = True  # Made the session cookie HTTP-only for security
